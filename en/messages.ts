import error from './error'
import game from './game'
import chat from './chat'

import { MessageList } from '../types/messages'
import { PoolGameGroup, PoolGameFoulType } from '../types/index'

export default <MessageList>{
	_entries: {
		total: 850,
		missing: 0
	},
	name: `Bloob.io`,
	error,
	game,
	chat,
	header: {
		message: {
			lobby: `Match lobby`,
			finished: `Match finished`,
			tied: `Match tied`,
			finishedRematch: `Rematch starting soon`,
			inProgress: `Match in progress`,
			staleMoves: `Match staled — %{staleCount} moves with no take over`,
			forfeit: `Match finished — Opponent chose to forfeit`,
			winner: `Match won by %{name}`,
			inactive: `Match ended due to inactivity`,
			late: `Match ended due to missing %{turns} turn(s)`,
			pickActionCard: `Picking action card`,
			pickCardSelection: `Making card selection`,
			handDump: `Dump round`,
			handPreview: `Hand preview`,
			voting: `Voting`,
			voteResults: `Vote results`,
			flippingField: `Flipping field`,
			removingRow: `Removing row`,
			yourTurn: `Your turn %{extra}`,
			nameTurn: `%{name}'s turn`,
			yourTurnBreaking: `You are breaking %{extra}`,
			nameTurnBreaking: `%{name} is breaking`,
			roundCount: `Round %{current} out of %{total}`
		},
		description: {
			waitingForPlayers: `Waiting for players`,
			startCountdown: `Match starts in %{text}...`,
			rematchStartCountdown: `Rematch starts in %{text}...`,
			remainingTimeCountdown: `%{clock} remaining...`,
			nextRoundCountdown: `Next round in %{text}...`,
			youWon: `You won`,
			nameWon: `%{name} has won`
		}
	},
	placeholder: {
		cardSetId: `Fill in card set ID...`,
		cardContent: `Fill in card content...`,
		cardSetName: `Fill in name for this card set...`,
		matchId: `Match ID or URL...`,
		message: `Message...`,
		username: `Username`,
		password: `Password`
	},
	language: {
		'nl-NL': `Dutch`,
		'en-US': `English (US)`,
		'en-GB': `English (UK)`,
		'fr-FR': `French`,
		'de-DE': `German`,
		'it-IT': `Italian`,
		'pl-PL': `Polish`,
		'pt-BR': `Portuguese (BR)`,
		'es-ES': `Spanish (EU)`,
		'es-MX': `Spanish (MX)`,
		'sv-SE': `Swedish`
	},
	status: {
		reconnecting: `Attempting to reconnect...`,
		viewAllGames: `View all games`,
		playingAgainstBots: `Playing Against Bots`,
		playingAgainstPlayers: `Playing Against Players`,
		matchesWaiting: `<b>0</b> matches waiting | <b>1</b> match waiting | <b>{count}</b> matches waiting`,
		playingGame: `<b>{count}</b> playing this game`,
		online: `<b>{count}</b> online`,
		connection: `Connection`,
		ping: `Ping`,
		timeOffset: `Time Offset`,
		version: `Version`,
		userId: `User ID`,
		notice: `Notice`
	},
	category: {
		misc: `Misc`,
		field: `Field`,
		dump: `Dump`,
		bomb: `Bomb`,
		filter: `Filter`,
		times: `Times`,
		round: `Round`,
		flip: `Flip`,
		default: `Default`,
		fallback: `Fallback Conditions`,
		take: `Take Over`,
		tetris: `Tetris`,
		basic: `Basic`,
		language: `Language`,
		rules: `Rules`,
		fouls: `Response to Foul`
	},
	time: {
		hours: `0 hours | 1 hour | {count} hours`,
		minutes: `0 minutes | 1 minute | {count} minutes`,
		seconds: `0 seconds | 1 second | {count} seconds`
	},
	count: {
		kills: `0 kills | 1 kill | {count} kills`,
		deaths: `0 deaths | 1 death | {count} deaths`,
		lives: `0 lives | 1 life | {count} lives`,
		files: `0 files | 1 file | {count} files`,
		points: `0 points | 1 point | {count} points`,
		pieces: `0 pieces | 1 piece | {count} pieces`,
		wins: `0 wins | 1 win | {count} wins`,
		cards: `0 cards | 1 card | {count} cards`,
		moves: `0 moves | 1 move | {count} moves`,
		playing: `0 playing | 1 playing | {count} playing`,
		players: `0 players | 1 player | {count} players`,
		selectedCards: `No cards selected | 1 card selected | {count} cards selected`,
		matches: `0 matches | 1 match | {count} matches`,
		matchesFound: `0 matches found | 1 match found | {count} matches found`,
		matchesWaiting: `0 matches waiting | 1 match waiting | {count} matches waiting`,
		needMorePlayers: `Need 0 more players | Need 1 more player | Need {count} more players`,
		playAgainstBots: `Play Against Bots | Play Against a Bot | Play Against Bots`,
		playRandomOpponents: `Play Random Opponents | Play Random Opponent | Play Random Opponents`,
		turnsToFlip: `Turns to flip | Turn to flip | Turns to flip`,
		increment: `Increments of 0 | Increment of 1 | Increments of {count}`
	},
	misc: {
		beta: `Beta`,
		about: `About`,
		public: `Public`,
		private: `Private`,
		add: `Add`,
		remove: `Remove`,
		yes: `Yes`,
		no: `No`,
		disabled: `Disabled`,
		enabled: `Enabled`,
		excluded: `Excluded`,
		included: `Included`,
		new: `New`,
		fixed: `Fixed`,
		changed: `Changed`,
		guest: `Guest`,
		settings: `Settings`,
		localPlay: `Local Play`,
		preset: `Preset`,
		you: `You`,
		home: `Home`,
		bot: `Bot`,
		bots: `Bots`,
		vibration: `Vibration`,
		unavailable: `Unavailable`,
		changeLog: `Change Log`,
		status: `Status`,
		information: `Information`,
		language: `Language`,
		toggle: `Toggle`,
		login: `Login`,
		maintenance: `Maintenance`,
		admin: `Admin`,
		nsfw: `NSFW`,
		specificCards: `Specific Cards`,
		matchId: `Match ID`,
		chat: `Chat`,
		host: `Host`,
		player: `Player`,
		players: `Players`,
		loading: `Loading...`,
		percentage: `{percentage}%`,
		percentageDisabled: `{percentage}% (Disabled)`,
		scrollBackDown: `Scroll back down`,
		pickYourself: `Pick for yourself`,
		highPing: `Your ping is high (%{ping}ms)`,
		currentRoundCount: `Round (%{current}/%{total})`,
		currentSkipCount: `Skip (%{current}/%{total})`,
		currentReadyCount: `Ready (%{current}/%{total})`,
		assignedTypeSelf: `You are %{type}`,
		assignedTypeSelfLocal: `Player (%{index}) is %{type}`,
		broadcast: `Broadcast`,
		confirm: `Confirm`,
		close: `Close`,
		edit: `Edit`,
		delete: `Delete`,
		cancel: `Cancel`,
		reset: `Reset`,
		start: `Start`,
		download: `Download`,
		share: `Share`,
		copy: `Copy`,
		view: `View`,
		donate: `Donate`,
		forfeit: `Forfeit Game`,
		processFiles: `Process Files`,
		sendMessage: `Send Message`,
		refreshWindow: `Refresh Window`,
		makeHost: `Make Host`,
		kickUser: `Kick User`,
		returnToMenu: `Return to Menu`,
		returnToLobby: `Return to Lobby`,
		playAsGuest: `Play as Guest`,
		averageLength: `Avg. Length`,
		largestTake: `Largest Take`,
		takes: `Takes`,
		pieces: `Pieces`,
		words: `Words`,
		score: `Score`,
		rank: `Rank`,
		kills: `Kills`,
		points: `Points`,
		wins: `Wins`,
		pocketed: `Pocketed`,
		shots: `Shots`,
		deaths: `Deaths`,
		fouls: `Fouls`,
		and: `and`,
		vs: `vs`,
		selectAll: `Select all`,
		deselectAll: `Deselect all`,
		resetData: `Reset Data`,
		customize: `Customise`,
		inviteOthers: `Invite Others`,
		activeFilters: `Active Filters`,
		minMax: `Min. %{min} | Max. %{max}`,
		madeBy: `Made by %{name}`,
		selectedOfLimit: `Selected %{current} out of %{total} limit`,
		helpLocalise: `Help improve localisation`,
		discord: `Join our Discord`,
		volume: `Volume`,
		volumeInterface: `Interface Volume`,
		volumeEffects: `Effects Volume`,
		gameMenu: `Game Menu`,
		selectYourLanguage: `Select Your Language`,
		selectYourColor: `Select Your Colour`,
		latestChanges: `Latest Changes`,
		noChangesDetected: `No Changes Detected`,
		newChanges: `New Changes`,
		saveChanges: `Save Changes`,
		previousChanges: `See Previous Changes`
	},
	card: {
		empty: `No Cards`,
		total: `Total Cards`,
		view: `View Cards`,
		editor: {
			title: `Card Editor`,
			name: `Card Set Name`,
			type: `Card Type`,
			content: `Card Content`,
			contentUnderscore: `Use _ to mark a space for response cards`,
			pick: `Pick Cards`,
			create: `Create Card`,
			deleted: `Deleted card successfully!`,
			edited: `Modified card successfully!`,
			created: `Added a new card successfully!`
		},
		type: {
			black: `Action (Black)`,
			white: `Response (White)`
		},
		sets: {
			title: `Card Sets`,
			contribute: `Contribute to this list`,
			create: `Create Set`,
			browser: `Browse & Import Custom Sets`,
			import: `Import Set`,
			importer: `Card Set Importer`,
			namedTitle: `Card Set "%{title}"`,
			custom: `Custom Card Sets`,
			default: `Default Card Sets`,
			noneFound: `No Sets Found`,
			noneSelected: `No Sets Selected`,
			importById: `Import card sets by ID (from third parties)`,
			notInOwnLibrary: `Missing Set`,
			addToLibrary: `Add to your library`,
			entrySave: `Save Card Set`,
			entrySaved: `Saved`,
			entryProcessing: `Processing`,
			info: {
				importFinished: `Processed all %{total} card sets`,
				importProgress: `Processing card set %{current} out of %{total}`,
				importFailed: `Failed to process card set "%{name}"`,
				emptyFolder: `No card sets have been shared here yet.`,
				emptyList: `Your custom card sets will show up here.`,
				emptyListNotHost: `The host has not selected any custom card sets.`,
				noneSelected: `The host must select card sets.`,
				notInOwnLibrary: `This custom card set was added by another user. You can add it to your library to use it again in the future.`,
				csv: `Please note CSV file support is limited and the resulting card set may not be flawless. For best results please use the native .json files (same as export).`,
				delete: `Deleting custom card set named "%{name}" cannot be undone. Download the set locally first if you wish to be able to recover it at a later time.`,
				storage: `Card sets are stored in your browser. Keep them safe by downloading a copy and saving it on your device.`,
				notHost: `Your imported cards are hidden, as you are not the host.`,
				sizeLimit: `Each custom card set takes up an amount of available storage. For performance reasons, a single game cannot use more than <b>%{size}</b> of custom card sets at a time.`,
				filterDisclaimer: `Please note that this filter can only be guaranteed for official card sets. Custom sets may not work with this filter.`
			}
		},
		info: {
			pickAction: `Pick an action card for this round`,
			judgePickingActionCard: `Judge %{name} is picking an action card`,
			waitForSelections: `You are the <b>judge</b> this round — wait for everyone to make their picks`,
			preview: `Take a moment to look at your (new) cards`,
			dump: `Select any cards you'd like to dump`,
			noType: `There are no %{type} cards`,
			delete: `You are about to delete card "%{info}".`,
			winningOption: `%{name} won this round with selection %{selection}`,
			actionResponseCardCounter: `Action & response card counter. Some sets use the same cards; duplicates are removed automatically. Filtering <b>NSFW</b> or <b>Specific Cards</b> also reduces the total amount.`,
			navigateSelf: `Navigate yourself`,
			navigateFollowJudge: `See what judge sees`
		}
	},
	match: {
		create: `Create Match`,
		leave: `Leave Match`,
		join: `Join Match`,
		joinById: `Join Match by ID`,
		full: `Full Match`,
		rematch: `Rematch`,
		lobby: {
			start: `Start Match`,
			cancelCountdown: `Cancel Countdown`,
			starting: `Match Starting`,
			waiting: `Waiting for host to start the match`
		},
		browser: {
			list: `Browse Matches`,
			available: `Available Matches`,
			noneAvailable: `No Available Matches`
		},
		matchmaking: {
			tiredOfWaiting: `Tired of waiting?`,
			cancel: `Cancel Matchmaking`,
			searching: `Looking for opponents... (%{time})`,
			found: `Match found! Starting in %{time}...`
		},
		info: {
			makeHost: `You are about to make "%{name}" the new host.`,
			kickUser: `You are about to kick "%{name}" from this match.`,
			noMatches: `New matches will show up here`,
			rematch: `Would you like to play again?`,
			rematchWaiting: `Waiting for other player to accept rematch...`,
			rematchRequest: `%{name} would like a rematch`,
			joinById: `You can join a (private) match by filling in the four-digit ID.`,
			public: `<b>Public: </b>Anyone can join by browsing the available matches.`,
			private: `<b>Private: </b>Players can only join using the URL or 4-digit ID.`,
			finishedSettings: `Finished editing the match settings?`,
			leave: `You may not be able to join back if you choose to leave.`,
			leaveLast: `Since you are the only person in the game, the match will be closed when you leave.`,
			leaveAsHost: `Somebody else will become the new host when you leave.`
		}
	},
	info: {
		incompleteTranslationNotice: `The language you have selected is roughly {percentage}% complete. Any missing translations will be in English.`,
		betaNotice: `This game is still being developed. Please share feedback & bugs on our %{social}`,
		clickForDetails: `Click for details`,
		howToPlay: `Learn how to play this game`,
		skipStepOverHalf: `This step can also be skipped if over half the users vote to.`,
		skipStepAll: `This step can also be skipped if all users vote to.`,
		voteReduceTime: `The remaining time is automatically reduced when everyone has voted.`,
		interfaceAutoResize: `Resizes the interface to fit field`,
		opponentMissedTurn: `It is now your turn as your opponent ran out of time.`,
		localPlay: `Share the same device with multiple people by adding local players.`,
		highPing: `The ping is the time it takes for you to communicate with the server. You are seeing everything later than other players and may experience jitter and delays.`,
		hasBots: `This game can be played against bots.`,
		inactiveUser: `User is not connected to this match.`,
		copiedToClipboard: `Copied content to clipboard!`,
		noMessages: `No Messages`,
		sendFirstMessage: `Be the first to send a message!`,
		voteSelf: `Cannot vote for yourself`,
		votePick: `Vote for %{option}`,
		votePickChange: `Change vote to %{option}`,
		votePickSelected: `You voted for %{option}`,
		inactiveOpponent: `Your opponent was inactive`,
		inactiveOpponents: `All opponents were inactive`,
		gameMenu: `Feel like playing something else?`,
		forfeit: `Forfeiting the game will result in a loss for you.`,
		unsavedChanges: `You have unsaved changes which will be erased if you proceed.`,
		resetData: `Resetting your data is irreversible and will clear your profile, settings, and other custom data.`,
		matchesDisabled: `You cannot make or join a match right now`,
		fileUpload: `Click to browse or drag your file(s) in here`,
		fileUploadMore: `Add more files by dragging or clicking here`,
		gameJoin: `Join %{title} Match`,
		gameHelp: `%{title} Help`,
		areYouSure: `Are you sure?`,
		poolType: {
			[PoolGameGroup.solid]: `Solids`,
			[PoolGameGroup.stripe]: `Stripes`
		},
		poolFoul: {
			[PoolGameFoulType.cueBallPocket]: `%{name} pocketed the cue ball!`,
			[PoolGameFoulType.cueBallHitNoBall]: `%{name} did not hit another ball!`,
			[PoolGameFoulType.cueBallHitWrongBall]: `%{name} hit the wrong ball first!`,
			[PoolGameFoulType.cushionHitMinOnBreak]: `Not enough balls hit a cushion after breaking. (Min. %{min})`,
			[PoolGameFoulType.cushionHitInvalid]: `No valid ball hit a cushion while no ball was pocketed.`,
			[PoolGameFoulType.consecutiveFoulsExceeded]: `%{name} committed %{fouls} consecutive fouls.`,
			[PoolGameFoulType.illegalEightBallPocket]: `%{name} pocketed the eight ball while committing a foul.`,
			[PoolGameFoulType.illegalEightBallPocketTooSoon]: `%{name} pocketed the eight ball too early.`,
			[PoolGameFoulType.pocketedWrongBall]: `%{name} pocketed the wrong ball.`
		},
		about: {
			description: `Bloob.io is a project of passion consisting of multiplayer browser games. Suggestions are always welcome!`,
			licensing: `Some games can be licensed for use on your site or platform (with custom adjustments). Get in touch in case you are interested.`,
			developedBy: `Developed by %{name}`,
			iconsSource: `Icons courtesy of %{name} (Licensed)`,
			soundsSource: `Sounds provided by %{name} (Licensed)`,
			rottenApplesSource: `Rotten Apples based on %{name} (Creative Commons BY-NC-SA 2.0)`,
			localization: `Localisation by volunteer contributors`
		}
	}
}
